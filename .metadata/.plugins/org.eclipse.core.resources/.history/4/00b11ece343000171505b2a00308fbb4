package MT;

import java.util.ArrayList;
import java.util.List;

import edu.stanford.nlp.ling.CoreLabel;

public class Grams 
{
	private ArrayList<CoreLabel> eng;
	private ArrayList<CoreLabel> esp;
	
	
	public Grams(List<CoreLabel> englishSent, List<CoreLabel> spanishSent, int size) {
		// TODO Auto-generated constructor stub
		eng = new ArrayList<CoreLabel>();
		esp = new ArrayList<CoreLabel>();
		
		operate(englishSent,spanishSent,size);
	}

	//ONLY IMPLEMENTED WITH GRAM3
	public void operate(List<CoreLabel> englishSent, List<CoreLabel> spanishSent,int size)
	{
		int min = Math.min(englishSent.size(), spanishSent.size());
		int remainder = min%size;
		if(remainder>0)
		{
			
		}
		else
		{
			int i; 
			for(i=0; i<min;i++)
			{
				
				
				System.out.println("MIN is "+min);
				//Consider Stringbuilder (its better)
				System.out.println("I0 "+i);
				CoreLabel[] ingles = new CoreLabel[3];
				CoreLabel[] spanish = new CoreLabel[3];
				
				
				//THOUGHT FOR 3-gram
				ingles[0] = clean(englishSent.get(i));
				System.out.println("I1 "+i);
				spanish[0]= clean(spanishSent.get(i));
				i++;
				ingles[1] = clean(englishSent.get(i));
				spanish[1]= clean(spanishSent.get(i));
				i++;
				ingles[2] = clean(englishSent.get(i));
				spanish[2]= clean(spanishSent.get(i));
				System.out.println("IUltimo  "+i);
			}
			
		}
		
	}
	public CoreLabel clean(CoreLabel coreLabel)
	{
		System.out.println(coreLabel);
			return coreLabel;	
		//return coreLabel.substring(0, coreLabel.size()-2);
	}
}
