package MT;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class T1 
{
	private static final File TESTENG = new File("AnimationLayerTestEng.txt");
	private static final File TESTESP = new File("AnimationLayerTestEsp.txt");

	private static final File TESTBUG8ENG = new File("res/test/Bug9.txt");
	private static final File TESTBUG8ESP = new File("res/test/Bug8esp.txt");
	
	private static final File DIRECTORIOENG = new File ("res/repo/manual/pagesEng/train/");
	private static final File DIRECTORIOESP = new File ("res/repo/manual/pagesEng/train/");

	private static BufferedReader brEng ;
	private static BufferedReader brEsp ;
	private static CoreNLP sNLP;

	public T1() throws FileNotFoundException
	{
		sNLP = new CoreNLP();
		readFile();



	}

	private void readPairFile(File eng,File esp)
	{
		try {
			brEng = new BufferedReader(new FileReader(eng));
			brEsp = new BufferedReader(new FileReader(esp));

			String lineaEng = brEng.readLine();
			String lineaEsp = brEsp.readLine();

			while(lineaEng!=null && lineaEsp!=null)
			{

				//System.out.println("Ingles: "+ lineaEng);
				//System.out.println("Espanol:  "+ lineaEsp);
				sNLP.process(lineaEng, lineaEsp);
				lineaEng = brEng.readLine();
				lineaEsp = brEsp.readLine();

			}




		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			brEng.close();
			brEsp.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void main (String[] args)
	{
		try {
			new T1();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void readFiles()
	{
		File[] listFilesEng = DIRECTORIOENG.listFiles();
		File[] listFilesEsp DIRECTORIOESP.listFiles();
		int tamArchivos =  listFiles.length;
		int count =0 ;

		for (int i = 1; i <tamArchivos; i++) {


			File index = listFiles[i];
			if(index.isDirectory())
			{
				int  tamSubArchivos = index.listFiles().length;

				//Test if size is the same
				//Test Archivos = 1351 (toca -1 por el primero y -1 por el otro .config);
				//Test cosos de Esp = 1349 

				for(int j = 0; j< tamSubArchivos;j++)
				{
					File index2 = index.listFiles()[j];

					if(index2.getName().equalsIgnoreCase("es.po"))
					{
						//Passes the current file but gets the name of the Parent directory
						//Parent directory is the Page's name

						//readPairFile(eng, esp);
						count++;
						//System.out.println(index2.getName());
					}
				}
			}
		}


	}

}
