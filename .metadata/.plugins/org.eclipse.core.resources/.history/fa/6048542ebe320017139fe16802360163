package Testing;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;

import Data.Pagina;
import MT.CoreNLP;

public class FileManager 
{
	private static final File DIRECTORIOENG = new File ("res/repo/pagesEng/debug/test/");
	private static OutputStream oEsp;
	private static BufferedReader br;
	private static CoreNLP nlp;
	private static TestController testC;
	public FileManager(CoreNLP nlpp)
	{
		nlp = nlpp;
		testC = new TestController(nlp.giveTC());
	}


	public static void LeerArchivos()
	{
		System.out.println("ENTERS TO READ FM FILES: ");
		File[] listFiles = DIRECTORIOENG.listFiles();
		int tamArchivos =  listFiles.length;
		//have to skip first file (.ds_store)
		//IT APPEARS DIS TIME NOE
		for (int i = 0; i <tamArchivos; i++) {


			File index = listFiles[i];
			if(index!=null)
			{
				System.out.println("ENTERS TO READ FM FILE: "+index);
				LeerArchivo(index,index.getName());
			}

		}
	}


	public static void LeerArchivo(File file,String nombreArchivo)
	{
		PaginaTraducida actual = new PaginaTraducida(nombreArchivo);

		try {
			br = new BufferedReader(new FileReader(	file));
			String linea =  br.readLine();
			while(linea!=null)
			{

			nlp.createTranslateNGrams(linea);




				linea = br.readLine();
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		actual.cerrarOut();
	}
	
	public TestController getTestController()
	{
		return testC;
	}
	
	/*
	public static void main(String[] args)
	{
		CoreNLP nlp = new CoreNLP();
		new FileManager(nlp);
	}
	*/



}
