package MT;

import java.util.ArrayList;
import java.util.List;

import edu.stanford.nlp.ling.CoreLabel;

public class Grams 
{
	private ArrayList<String> eng;
	private ArrayList<String> esp;
	
	
	public Grams(List<CoreLabel> englishSent, List<CoreLabel> spanishSent, int size) {
		// TODO Auto-generated constructor stub
		eng = new ArrayList<String>();
		esp = new ArrayList<String>();
		
		operate(englishSent,spanishSent,size);
	}

	//ONLY IMPLEMENTED WITH GRAM3
	public void operate(List<CoreLabel> englishSent, List<CoreLabel> spanishSent,int size)
	{
		List<CoreLabel> mayor = (englishSent.size()>=spanishSent.size())?
		int min = Math.min(englishSent.size(), spanishSent.size());
		int remainder = min%size;
		int diff= Math.max(englishSent.size(),spanishSent.size()) - min;
		if(remainder>0)
		{
			
		}
		//Se pierde informaci√≥n porque no se considera lo restante 
		else
		{
			int i; 
			for(i=0; i<min;i++)
			{
				
				
				//Consider Stringbuilder (its better)
				//STRING can be CoreLabel check that out later
				String[] ingles = new String[3];
				String[] spanish = new String[3];
				
				
				//THOUGHT FOR 3-gram
				ingles[0] = clean(englishSent.get(i));
				spanish[0]= clean(spanishSent.get(i));
				i++;
				ingles[1] = clean(englishSent.get(i));
				spanish[1]= clean(spanishSent.get(i));
				i++;
				ingles[2] = clean(englishSent.get(i));
				spanish[2]= clean(spanishSent.get(i));
			}
			if(diff>0)
			{
				
			}
			
		}
		
	}
	public String clean(CoreLabel coreLabel)
	{
		System.out.println(coreLabel.originalText());
			return coreLabel.originalText();	
		//return coreLabel.substring(0, coreLabel.size()-2);
	}
}
